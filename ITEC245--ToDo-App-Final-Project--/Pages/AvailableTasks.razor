@page "/AvailableTasks"
@using ITEC245__ToDo_App_Final_Project__.Data;

@inject NavigationManager NavigationManager

<h3>Available Tasks</h3>

<table class="table">
    <!-- Boilerplate taken from bootstrap docs -->
    <thead>
        <tr>
            <th scope="col">Task ID</th>
            <th scope="col">Task Name</th>
            <th scope="col">Status</th>
            <th scope="col">Options</th>
        </tr>
    </thead>
    <tbody>
        <!-- Would like to add sorting, will need c# methods in code section -->

        <AuthorizeView Roles="Admin">
            <Authorized>
                <tr>
                    <td>
                        <button>Add a Task</button>
                    </td>
                </tr>
            </Authorized>
        </AuthorizeView>

        @foreach (var task in Tasks)
        {
            <tr>
                <th scope="row">@task.TaskId</th>
                <td>@task.TaskName</td>
                <td>@task.Status</td>
                <td>
                    <button @onclick="() => ViewDetails(task.TaskId)">View Details</button>

                    <AuthorizeView Roles="Admin">
                        <Authorized>
                            <button>Edit Details</button>
                            <button>Delete</button>
                        </Authorized>
                    </AuthorizeView>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Models.Task> Tasks;

    protected override void OnInitialized()
    {
        using (var context = new ToDoAppDbContext())
        {
            Tasks = context.Tasks.ToList();
            Tasks.RemoveAll(x => x.Status != Models.Task.TaskProgress.Unassigned);
        }
    }

    private void ViewDetails(int taskId)
    {
        NavigationManager.NavigateTo($"/TaskDetails/{taskId}");
    }

}