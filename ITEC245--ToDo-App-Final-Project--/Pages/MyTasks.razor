@page "/MyTasks"

@using ITEC245__ToDo_App_Final_Project__.Data;
@using System.Security.Claims
@using ITEC245__ToDo_App_Final_Project__.Components;

@inject AuthenticationStateProvider AuthenticationStateProvider

<h3><strong>My Tasks</strong></h3>
<TaskListComponent _Tasks="MyTasksList" _UserID="_UserID"/>

@code {
    List<Models.Task> MyTasksList = new List<Models.Task>();

    private ClaimsPrincipal user;

    private int _UserID;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;

        using(var context = new ToDoAppDbContext())
        {
            _UserID = context.Users.FirstOrDefault(x => x.Email == user.Identity.Name).Id;

            MyTasksList = context.TaskTeams.Where(x => x.UserID == _UserID).Select(x => x.Task).OrderBy(x => x.Status).ThenBy(x => x.TaskId).ToList();
        }
    }
}
